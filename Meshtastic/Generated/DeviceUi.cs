// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: meshtastic/device_ui.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Meshtastic.Protobufs {

  /// <summary>Holder for reflection information generated from meshtastic/device_ui.proto</summary>
  public static partial class DeviceUiReflection {

    #region Descriptor
    /// <summary>File descriptor for meshtastic/device_ui.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceUiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChptZXNodGFzdGljL2RldmljZV91aS5wcm90bxIKbWVzaHRhc3RpYyKkBAoO",
            "RGV2aWNlVUlDb25maWcSDwoHdmVyc2lvbhgBIAEoDRIZChFzY3JlZW5fYnJp",
            "Z2h0bmVzcxgCIAEoDRIWCg5zY3JlZW5fdGltZW91dBgDIAEoDRITCgtzY3Jl",
            "ZW5fbG9jaxgEIAEoCBIVCg1zZXR0aW5nc19sb2NrGAUgASgIEhAKCHBpbl9j",
            "b2RlGAYgASgNEiAKBXRoZW1lGAcgASgOMhEubWVzaHRhc3RpYy5UaGVtZRIV",
            "Cg1hbGVydF9lbmFibGVkGAggASgIEhYKDmJhbm5lcl9lbmFibGVkGAkgASgI",
            "EhQKDHJpbmdfdG9uZV9pZBgKIAEoDRImCghsYW5ndWFnZRgLIAEoDjIULm1l",
            "c2h0YXN0aWMuTGFuZ3VhZ2USKwoLbm9kZV9maWx0ZXIYDCABKAsyFi5tZXNo",
            "dGFzdGljLk5vZGVGaWx0ZXISMQoObm9kZV9oaWdobGlnaHQYDSABKAsyGS5t",
            "ZXNodGFzdGljLk5vZGVIaWdobGlnaHQSGAoQY2FsaWJyYXRpb25fZGF0YRgO",
            "IAEoDBIhCghtYXBfZGF0YRgPIAEoCzIPLm1lc2h0YXN0aWMuTWFwEi0KDGNv",
            "bXBhc3NfbW9kZRgQIAEoDjIXLm1lc2h0YXN0aWMuQ29tcGFzc01vZGUSGAoQ",
            "c2NyZWVuX3JnYl9jb2xvchgRIAEoDRIbChNpc19jbG9ja2ZhY2VfYW5hbG9n",
            "GBIgASgIIqcBCgpOb2RlRmlsdGVyEhYKDnVua25vd25fc3dpdGNoGAEgASgI",
            "EhYKDm9mZmxpbmVfc3dpdGNoGAIgASgIEhkKEXB1YmxpY19rZXlfc3dpdGNo",
            "GAMgASgIEhEKCWhvcHNfYXdheRgEIAEoBRIXCg9wb3NpdGlvbl9zd2l0Y2gY",
            "BSABKAgSEQoJbm9kZV9uYW1lGAYgASgJEg8KB2NoYW5uZWwYByABKAUifgoN",
            "Tm9kZUhpZ2hsaWdodBITCgtjaGF0X3N3aXRjaBgBIAEoCBIXCg9wb3NpdGlv",
            "bl9zd2l0Y2gYAiABKAgSGAoQdGVsZW1ldHJ5X3N3aXRjaBgDIAEoCBISCgpp",
            "YXFfc3dpdGNoGAQgASgIEhEKCW5vZGVfbmFtZRgFIAEoCSI9CghHZW9Qb2lu",
            "dBIMCgR6b29tGAEgASgFEhAKCGxhdGl0dWRlGAIgASgFEhEKCWxvbmdpdHVk",
            "ZRgDIAEoBSJMCgNNYXASIgoEaG9tZRgBIAEoCzIULm1lc2h0YXN0aWMuR2Vv",
            "UG9pbnQSDQoFc3R5bGUYAiABKAkSEgoKZm9sbG93X2dwcxgDIAEoCCo+CgtD",
            "b21wYXNzTW9kZRILCgdEWU5BTUlDEAASDgoKRklYRURfUklORxABEhIKDkZS",
            "RUVaRV9IRUFESU5HEAIqJQoFVGhlbWUSCAoEREFSSxAAEgkKBUxJR0hUEAES",
            "BwoDUkVEEAIqqQIKCExhbmd1YWdlEgsKB0VOR0xJU0gQABIKCgZGUkVOQ0gQ",
            "ARIKCgZHRVJNQU4QAhILCgdJVEFMSUFOEAMSDgoKUE9SVFVHVUVTRRAEEgsK",
            "B1NQQU5JU0gQBRILCgdTV0VESVNIEAYSCwoHRklOTklTSBAHEgoKBlBPTElT",
            "SBAIEgsKB1RVUktJU0gQCRILCgdTRVJCSUFOEAoSCwoHUlVTU0lBThALEgkK",
            "BURVVENIEAwSCQoFR1JFRUsQDRINCglOT1JXRUdJQU4QDhINCglTTE9WRU5J",
            "QU4QDxINCglVS1JBSU5JQU4QEBINCglCVUxHQVJJQU4QERIWChJTSU1QTElG",
            "SUVEX0NISU5FU0UQHhIXChNUUkFESVRJT05BTF9DSElORVNFEB9CYwoTY29t",
            "LmdlZWtzdmlsbGUubWVzaEIORGV2aWNlVUlQcm90b3NaImdpdGh1Yi5jb20v",
            "bWVzaHRhc3RpYy9nby9nZW5lcmF0ZWSqAhRNZXNodGFzdGljLlByb3RvYnVm",
            "c7oCAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Meshtastic.Protobufs.CompassMode), typeof(global::Meshtastic.Protobufs.Theme), typeof(global::Meshtastic.Protobufs.Language), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.DeviceUIConfig), global::Meshtastic.Protobufs.DeviceUIConfig.Parser, new[]{ "Version", "ScreenBrightness", "ScreenTimeout", "ScreenLock", "SettingsLock", "PinCode", "Theme", "AlertEnabled", "BannerEnabled", "RingToneId", "Language", "NodeFilter", "NodeHighlight", "CalibrationData", "MapData", "CompassMode", "ScreenRgbColor", "IsClockfaceAnalog" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.NodeFilter), global::Meshtastic.Protobufs.NodeFilter.Parser, new[]{ "UnknownSwitch", "OfflineSwitch", "PublicKeySwitch", "HopsAway", "PositionSwitch", "NodeName", "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.NodeHighlight), global::Meshtastic.Protobufs.NodeHighlight.Parser, new[]{ "ChatSwitch", "PositionSwitch", "TelemetrySwitch", "IaqSwitch", "NodeName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.GeoPoint), global::Meshtastic.Protobufs.GeoPoint.Parser, new[]{ "Zoom", "Latitude", "Longitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Meshtastic.Protobufs.Map), global::Meshtastic.Protobufs.Map.Parser, new[]{ "Home", "Style", "FollowGps" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CompassMode {
    /// <summary>
    ///
    /// Compass with dynamic ring and heading
    /// </summary>
    [pbr::OriginalName("DYNAMIC")] Dynamic = 0,
    /// <summary>
    ///
    /// Compass with fixed ring and heading
    /// </summary>
    [pbr::OriginalName("FIXED_RING")] FixedRing = 1,
    /// <summary>
    ///
    /// Compass with heading and freeze option
    /// </summary>
    [pbr::OriginalName("FREEZE_HEADING")] FreezeHeading = 2,
  }

  public enum Theme {
    /// <summary>
    ///
    /// Dark
    /// </summary>
    [pbr::OriginalName("DARK")] Dark = 0,
    /// <summary>
    ///
    /// Light
    /// </summary>
    [pbr::OriginalName("LIGHT")] Light = 1,
    /// <summary>
    ///
    /// Red
    /// </summary>
    [pbr::OriginalName("RED")] Red = 2,
  }

  /// <summary>
  ///
  /// Localization
  /// </summary>
  public enum Language {
    /// <summary>
    ///
    /// English
    /// </summary>
    [pbr::OriginalName("ENGLISH")] English = 0,
    /// <summary>
    ///
    /// French
    /// </summary>
    [pbr::OriginalName("FRENCH")] French = 1,
    /// <summary>
    ///
    /// German
    /// </summary>
    [pbr::OriginalName("GERMAN")] German = 2,
    /// <summary>
    ///
    /// Italian
    /// </summary>
    [pbr::OriginalName("ITALIAN")] Italian = 3,
    /// <summary>
    ///
    /// Portuguese
    /// </summary>
    [pbr::OriginalName("PORTUGUESE")] Portuguese = 4,
    /// <summary>
    ///
    /// Spanish
    /// </summary>
    [pbr::OriginalName("SPANISH")] Spanish = 5,
    /// <summary>
    ///
    /// Swedish
    /// </summary>
    [pbr::OriginalName("SWEDISH")] Swedish = 6,
    /// <summary>
    ///
    /// Finnish
    /// </summary>
    [pbr::OriginalName("FINNISH")] Finnish = 7,
    /// <summary>
    ///
    /// Polish
    /// </summary>
    [pbr::OriginalName("POLISH")] Polish = 8,
    /// <summary>
    ///
    /// Turkish
    /// </summary>
    [pbr::OriginalName("TURKISH")] Turkish = 9,
    /// <summary>
    ///
    /// Serbian
    /// </summary>
    [pbr::OriginalName("SERBIAN")] Serbian = 10,
    /// <summary>
    ///
    /// Russian
    /// </summary>
    [pbr::OriginalName("RUSSIAN")] Russian = 11,
    /// <summary>
    ///
    /// Dutch
    /// </summary>
    [pbr::OriginalName("DUTCH")] Dutch = 12,
    /// <summary>
    ///
    /// Greek
    /// </summary>
    [pbr::OriginalName("GREEK")] Greek = 13,
    /// <summary>
    ///
    /// Norwegian
    /// </summary>
    [pbr::OriginalName("NORWEGIAN")] Norwegian = 14,
    /// <summary>
    ///
    /// Slovenian
    /// </summary>
    [pbr::OriginalName("SLOVENIAN")] Slovenian = 15,
    /// <summary>
    ///
    /// Ukrainian
    /// </summary>
    [pbr::OriginalName("UKRAINIAN")] Ukrainian = 16,
    /// <summary>
    ///
    /// Bulgarian
    /// </summary>
    [pbr::OriginalName("BULGARIAN")] Bulgarian = 17,
    /// <summary>
    ///
    /// Simplified Chinese (experimental)
    /// </summary>
    [pbr::OriginalName("SIMPLIFIED_CHINESE")] SimplifiedChinese = 30,
    /// <summary>
    ///
    /// Traditional Chinese (experimental)
    /// </summary>
    [pbr::OriginalName("TRADITIONAL_CHINESE")] TraditionalChinese = 31,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceUIConfig : pb::IMessage<DeviceUIConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceUIConfig> _parser = new pb::MessageParser<DeviceUIConfig>(() => new DeviceUIConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceUIConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.DeviceUiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceUIConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceUIConfig(DeviceUIConfig other) : this() {
      version_ = other.version_;
      screenBrightness_ = other.screenBrightness_;
      screenTimeout_ = other.screenTimeout_;
      screenLock_ = other.screenLock_;
      settingsLock_ = other.settingsLock_;
      pinCode_ = other.pinCode_;
      theme_ = other.theme_;
      alertEnabled_ = other.alertEnabled_;
      bannerEnabled_ = other.bannerEnabled_;
      ringToneId_ = other.ringToneId_;
      language_ = other.language_;
      nodeFilter_ = other.nodeFilter_ != null ? other.nodeFilter_.Clone() : null;
      nodeHighlight_ = other.nodeHighlight_ != null ? other.nodeHighlight_.Clone() : null;
      calibrationData_ = other.calibrationData_;
      mapData_ = other.mapData_ != null ? other.mapData_.Clone() : null;
      compassMode_ = other.compassMode_;
      screenRgbColor_ = other.screenRgbColor_;
      isClockfaceAnalog_ = other.isClockfaceAnalog_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceUIConfig Clone() {
      return new DeviceUIConfig(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    /// <summary>
    ///
    /// A version integer used to invalidate saved files when we make incompatible changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "screen_brightness" field.</summary>
    public const int ScreenBrightnessFieldNumber = 2;
    private uint screenBrightness_;
    /// <summary>
    ///
    /// TFT display brightness 1..255
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScreenBrightness {
      get { return screenBrightness_; }
      set {
        screenBrightness_ = value;
      }
    }

    /// <summary>Field number for the "screen_timeout" field.</summary>
    public const int ScreenTimeoutFieldNumber = 3;
    private uint screenTimeout_;
    /// <summary>
    ///
    /// Screen timeout 0..900
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScreenTimeout {
      get { return screenTimeout_; }
      set {
        screenTimeout_ = value;
      }
    }

    /// <summary>Field number for the "screen_lock" field.</summary>
    public const int ScreenLockFieldNumber = 4;
    private bool screenLock_;
    /// <summary>
    ///
    /// Screen/Settings lock enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScreenLock {
      get { return screenLock_; }
      set {
        screenLock_ = value;
      }
    }

    /// <summary>Field number for the "settings_lock" field.</summary>
    public const int SettingsLockFieldNumber = 5;
    private bool settingsLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SettingsLock {
      get { return settingsLock_; }
      set {
        settingsLock_ = value;
      }
    }

    /// <summary>Field number for the "pin_code" field.</summary>
    public const int PinCodeFieldNumber = 6;
    private uint pinCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PinCode {
      get { return pinCode_; }
      set {
        pinCode_ = value;
      }
    }

    /// <summary>Field number for the "theme" field.</summary>
    public const int ThemeFieldNumber = 7;
    private global::Meshtastic.Protobufs.Theme theme_ = global::Meshtastic.Protobufs.Theme.Dark;
    /// <summary>
    ///
    /// Color theme
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Theme Theme {
      get { return theme_; }
      set {
        theme_ = value;
      }
    }

    /// <summary>Field number for the "alert_enabled" field.</summary>
    public const int AlertEnabledFieldNumber = 8;
    private bool alertEnabled_;
    /// <summary>
    ///
    /// Audible message, banner and ring tone
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AlertEnabled {
      get { return alertEnabled_; }
      set {
        alertEnabled_ = value;
      }
    }

    /// <summary>Field number for the "banner_enabled" field.</summary>
    public const int BannerEnabledFieldNumber = 9;
    private bool bannerEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BannerEnabled {
      get { return bannerEnabled_; }
      set {
        bannerEnabled_ = value;
      }
    }

    /// <summary>Field number for the "ring_tone_id" field.</summary>
    public const int RingToneIdFieldNumber = 10;
    private uint ringToneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RingToneId {
      get { return ringToneId_; }
      set {
        ringToneId_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 11;
    private global::Meshtastic.Protobufs.Language language_ = global::Meshtastic.Protobufs.Language.English;
    /// <summary>
    ///
    /// Localization
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Language Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "node_filter" field.</summary>
    public const int NodeFilterFieldNumber = 12;
    private global::Meshtastic.Protobufs.NodeFilter nodeFilter_;
    /// <summary>
    ///
    /// Node list filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.NodeFilter NodeFilter {
      get { return nodeFilter_; }
      set {
        nodeFilter_ = value;
      }
    }

    /// <summary>Field number for the "node_highlight" field.</summary>
    public const int NodeHighlightFieldNumber = 13;
    private global::Meshtastic.Protobufs.NodeHighlight nodeHighlight_;
    /// <summary>
    ///
    /// Node list highlightening
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.NodeHighlight NodeHighlight {
      get { return nodeHighlight_; }
      set {
        nodeHighlight_ = value;
      }
    }

    /// <summary>Field number for the "calibration_data" field.</summary>
    public const int CalibrationDataFieldNumber = 14;
    private pb::ByteString calibrationData_ = pb::ByteString.Empty;
    /// <summary>
    ///
    /// 8 integers for screen calibration data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CalibrationData {
      get { return calibrationData_; }
      set {
        calibrationData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_data" field.</summary>
    public const int MapDataFieldNumber = 15;
    private global::Meshtastic.Protobufs.Map mapData_;
    /// <summary>
    ///
    /// Map related data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.Map MapData {
      get { return mapData_; }
      set {
        mapData_ = value;
      }
    }

    /// <summary>Field number for the "compass_mode" field.</summary>
    public const int CompassModeFieldNumber = 16;
    private global::Meshtastic.Protobufs.CompassMode compassMode_ = global::Meshtastic.Protobufs.CompassMode.Dynamic;
    /// <summary>
    ///
    /// Compass mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.CompassMode CompassMode {
      get { return compassMode_; }
      set {
        compassMode_ = value;
      }
    }

    /// <summary>Field number for the "screen_rgb_color" field.</summary>
    public const int ScreenRgbColorFieldNumber = 17;
    private uint screenRgbColor_;
    /// <summary>
    ///
    /// RGB color for BaseUI
    /// 0xRRGGBB format, e.g. 0xFF0000 for red
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScreenRgbColor {
      get { return screenRgbColor_; }
      set {
        screenRgbColor_ = value;
      }
    }

    /// <summary>Field number for the "is_clockface_analog" field.</summary>
    public const int IsClockfaceAnalogFieldNumber = 18;
    private bool isClockfaceAnalog_;
    /// <summary>
    ///
    /// Clockface analog style
    /// true for analog clockface, false for digital clockface
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClockfaceAnalog {
      get { return isClockfaceAnalog_; }
      set {
        isClockfaceAnalog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceUIConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceUIConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (ScreenBrightness != other.ScreenBrightness) return false;
      if (ScreenTimeout != other.ScreenTimeout) return false;
      if (ScreenLock != other.ScreenLock) return false;
      if (SettingsLock != other.SettingsLock) return false;
      if (PinCode != other.PinCode) return false;
      if (Theme != other.Theme) return false;
      if (AlertEnabled != other.AlertEnabled) return false;
      if (BannerEnabled != other.BannerEnabled) return false;
      if (RingToneId != other.RingToneId) return false;
      if (Language != other.Language) return false;
      if (!object.Equals(NodeFilter, other.NodeFilter)) return false;
      if (!object.Equals(NodeHighlight, other.NodeHighlight)) return false;
      if (CalibrationData != other.CalibrationData) return false;
      if (!object.Equals(MapData, other.MapData)) return false;
      if (CompassMode != other.CompassMode) return false;
      if (ScreenRgbColor != other.ScreenRgbColor) return false;
      if (IsClockfaceAnalog != other.IsClockfaceAnalog) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ScreenBrightness != 0) hash ^= ScreenBrightness.GetHashCode();
      if (ScreenTimeout != 0) hash ^= ScreenTimeout.GetHashCode();
      if (ScreenLock != false) hash ^= ScreenLock.GetHashCode();
      if (SettingsLock != false) hash ^= SettingsLock.GetHashCode();
      if (PinCode != 0) hash ^= PinCode.GetHashCode();
      if (Theme != global::Meshtastic.Protobufs.Theme.Dark) hash ^= Theme.GetHashCode();
      if (AlertEnabled != false) hash ^= AlertEnabled.GetHashCode();
      if (BannerEnabled != false) hash ^= BannerEnabled.GetHashCode();
      if (RingToneId != 0) hash ^= RingToneId.GetHashCode();
      if (Language != global::Meshtastic.Protobufs.Language.English) hash ^= Language.GetHashCode();
      if (nodeFilter_ != null) hash ^= NodeFilter.GetHashCode();
      if (nodeHighlight_ != null) hash ^= NodeHighlight.GetHashCode();
      if (CalibrationData.Length != 0) hash ^= CalibrationData.GetHashCode();
      if (mapData_ != null) hash ^= MapData.GetHashCode();
      if (CompassMode != global::Meshtastic.Protobufs.CompassMode.Dynamic) hash ^= CompassMode.GetHashCode();
      if (ScreenRgbColor != 0) hash ^= ScreenRgbColor.GetHashCode();
      if (IsClockfaceAnalog != false) hash ^= IsClockfaceAnalog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (ScreenBrightness != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScreenBrightness);
      }
      if (ScreenTimeout != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ScreenTimeout);
      }
      if (ScreenLock != false) {
        output.WriteRawTag(32);
        output.WriteBool(ScreenLock);
      }
      if (SettingsLock != false) {
        output.WriteRawTag(40);
        output.WriteBool(SettingsLock);
      }
      if (PinCode != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PinCode);
      }
      if (Theme != global::Meshtastic.Protobufs.Theme.Dark) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Theme);
      }
      if (AlertEnabled != false) {
        output.WriteRawTag(64);
        output.WriteBool(AlertEnabled);
      }
      if (BannerEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(BannerEnabled);
      }
      if (RingToneId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RingToneId);
      }
      if (Language != global::Meshtastic.Protobufs.Language.English) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Language);
      }
      if (nodeFilter_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(NodeFilter);
      }
      if (nodeHighlight_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(NodeHighlight);
      }
      if (CalibrationData.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(CalibrationData);
      }
      if (mapData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(MapData);
      }
      if (CompassMode != global::Meshtastic.Protobufs.CompassMode.Dynamic) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) CompassMode);
      }
      if (ScreenRgbColor != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ScreenRgbColor);
      }
      if (IsClockfaceAnalog != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsClockfaceAnalog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (ScreenBrightness != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScreenBrightness);
      }
      if (ScreenTimeout != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ScreenTimeout);
      }
      if (ScreenLock != false) {
        output.WriteRawTag(32);
        output.WriteBool(ScreenLock);
      }
      if (SettingsLock != false) {
        output.WriteRawTag(40);
        output.WriteBool(SettingsLock);
      }
      if (PinCode != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PinCode);
      }
      if (Theme != global::Meshtastic.Protobufs.Theme.Dark) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Theme);
      }
      if (AlertEnabled != false) {
        output.WriteRawTag(64);
        output.WriteBool(AlertEnabled);
      }
      if (BannerEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(BannerEnabled);
      }
      if (RingToneId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RingToneId);
      }
      if (Language != global::Meshtastic.Protobufs.Language.English) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Language);
      }
      if (nodeFilter_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(NodeFilter);
      }
      if (nodeHighlight_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(NodeHighlight);
      }
      if (CalibrationData.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(CalibrationData);
      }
      if (mapData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(MapData);
      }
      if (CompassMode != global::Meshtastic.Protobufs.CompassMode.Dynamic) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) CompassMode);
      }
      if (ScreenRgbColor != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ScreenRgbColor);
      }
      if (IsClockfaceAnalog != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsClockfaceAnalog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (ScreenBrightness != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScreenBrightness);
      }
      if (ScreenTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScreenTimeout);
      }
      if (ScreenLock != false) {
        size += 1 + 1;
      }
      if (SettingsLock != false) {
        size += 1 + 1;
      }
      if (PinCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PinCode);
      }
      if (Theme != global::Meshtastic.Protobufs.Theme.Dark) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Theme);
      }
      if (AlertEnabled != false) {
        size += 1 + 1;
      }
      if (BannerEnabled != false) {
        size += 1 + 1;
      }
      if (RingToneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RingToneId);
      }
      if (Language != global::Meshtastic.Protobufs.Language.English) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Language);
      }
      if (nodeFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeFilter);
      }
      if (nodeHighlight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeHighlight);
      }
      if (CalibrationData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CalibrationData);
      }
      if (mapData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapData);
      }
      if (CompassMode != global::Meshtastic.Protobufs.CompassMode.Dynamic) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CompassMode);
      }
      if (ScreenRgbColor != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScreenRgbColor);
      }
      if (IsClockfaceAnalog != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceUIConfig other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ScreenBrightness != 0) {
        ScreenBrightness = other.ScreenBrightness;
      }
      if (other.ScreenTimeout != 0) {
        ScreenTimeout = other.ScreenTimeout;
      }
      if (other.ScreenLock != false) {
        ScreenLock = other.ScreenLock;
      }
      if (other.SettingsLock != false) {
        SettingsLock = other.SettingsLock;
      }
      if (other.PinCode != 0) {
        PinCode = other.PinCode;
      }
      if (other.Theme != global::Meshtastic.Protobufs.Theme.Dark) {
        Theme = other.Theme;
      }
      if (other.AlertEnabled != false) {
        AlertEnabled = other.AlertEnabled;
      }
      if (other.BannerEnabled != false) {
        BannerEnabled = other.BannerEnabled;
      }
      if (other.RingToneId != 0) {
        RingToneId = other.RingToneId;
      }
      if (other.Language != global::Meshtastic.Protobufs.Language.English) {
        Language = other.Language;
      }
      if (other.nodeFilter_ != null) {
        if (nodeFilter_ == null) {
          NodeFilter = new global::Meshtastic.Protobufs.NodeFilter();
        }
        NodeFilter.MergeFrom(other.NodeFilter);
      }
      if (other.nodeHighlight_ != null) {
        if (nodeHighlight_ == null) {
          NodeHighlight = new global::Meshtastic.Protobufs.NodeHighlight();
        }
        NodeHighlight.MergeFrom(other.NodeHighlight);
      }
      if (other.CalibrationData.Length != 0) {
        CalibrationData = other.CalibrationData;
      }
      if (other.mapData_ != null) {
        if (mapData_ == null) {
          MapData = new global::Meshtastic.Protobufs.Map();
        }
        MapData.MergeFrom(other.MapData);
      }
      if (other.CompassMode != global::Meshtastic.Protobufs.CompassMode.Dynamic) {
        CompassMode = other.CompassMode;
      }
      if (other.ScreenRgbColor != 0) {
        ScreenRgbColor = other.ScreenRgbColor;
      }
      if (other.IsClockfaceAnalog != false) {
        IsClockfaceAnalog = other.IsClockfaceAnalog;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            ScreenBrightness = input.ReadUInt32();
            break;
          }
          case 24: {
            ScreenTimeout = input.ReadUInt32();
            break;
          }
          case 32: {
            ScreenLock = input.ReadBool();
            break;
          }
          case 40: {
            SettingsLock = input.ReadBool();
            break;
          }
          case 48: {
            PinCode = input.ReadUInt32();
            break;
          }
          case 56: {
            Theme = (global::Meshtastic.Protobufs.Theme) input.ReadEnum();
            break;
          }
          case 64: {
            AlertEnabled = input.ReadBool();
            break;
          }
          case 72: {
            BannerEnabled = input.ReadBool();
            break;
          }
          case 80: {
            RingToneId = input.ReadUInt32();
            break;
          }
          case 88: {
            Language = (global::Meshtastic.Protobufs.Language) input.ReadEnum();
            break;
          }
          case 98: {
            if (nodeFilter_ == null) {
              NodeFilter = new global::Meshtastic.Protobufs.NodeFilter();
            }
            input.ReadMessage(NodeFilter);
            break;
          }
          case 106: {
            if (nodeHighlight_ == null) {
              NodeHighlight = new global::Meshtastic.Protobufs.NodeHighlight();
            }
            input.ReadMessage(NodeHighlight);
            break;
          }
          case 114: {
            CalibrationData = input.ReadBytes();
            break;
          }
          case 122: {
            if (mapData_ == null) {
              MapData = new global::Meshtastic.Protobufs.Map();
            }
            input.ReadMessage(MapData);
            break;
          }
          case 128: {
            CompassMode = (global::Meshtastic.Protobufs.CompassMode) input.ReadEnum();
            break;
          }
          case 136: {
            ScreenRgbColor = input.ReadUInt32();
            break;
          }
          case 144: {
            IsClockfaceAnalog = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            ScreenBrightness = input.ReadUInt32();
            break;
          }
          case 24: {
            ScreenTimeout = input.ReadUInt32();
            break;
          }
          case 32: {
            ScreenLock = input.ReadBool();
            break;
          }
          case 40: {
            SettingsLock = input.ReadBool();
            break;
          }
          case 48: {
            PinCode = input.ReadUInt32();
            break;
          }
          case 56: {
            Theme = (global::Meshtastic.Protobufs.Theme) input.ReadEnum();
            break;
          }
          case 64: {
            AlertEnabled = input.ReadBool();
            break;
          }
          case 72: {
            BannerEnabled = input.ReadBool();
            break;
          }
          case 80: {
            RingToneId = input.ReadUInt32();
            break;
          }
          case 88: {
            Language = (global::Meshtastic.Protobufs.Language) input.ReadEnum();
            break;
          }
          case 98: {
            if (nodeFilter_ == null) {
              NodeFilter = new global::Meshtastic.Protobufs.NodeFilter();
            }
            input.ReadMessage(NodeFilter);
            break;
          }
          case 106: {
            if (nodeHighlight_ == null) {
              NodeHighlight = new global::Meshtastic.Protobufs.NodeHighlight();
            }
            input.ReadMessage(NodeHighlight);
            break;
          }
          case 114: {
            CalibrationData = input.ReadBytes();
            break;
          }
          case 122: {
            if (mapData_ == null) {
              MapData = new global::Meshtastic.Protobufs.Map();
            }
            input.ReadMessage(MapData);
            break;
          }
          case 128: {
            CompassMode = (global::Meshtastic.Protobufs.CompassMode) input.ReadEnum();
            break;
          }
          case 136: {
            ScreenRgbColor = input.ReadUInt32();
            break;
          }
          case 144: {
            IsClockfaceAnalog = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NodeFilter : pb::IMessage<NodeFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeFilter> _parser = new pb::MessageParser<NodeFilter>(() => new NodeFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.DeviceUiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeFilter(NodeFilter other) : this() {
      unknownSwitch_ = other.unknownSwitch_;
      offlineSwitch_ = other.offlineSwitch_;
      publicKeySwitch_ = other.publicKeySwitch_;
      hopsAway_ = other.hopsAway_;
      positionSwitch_ = other.positionSwitch_;
      nodeName_ = other.nodeName_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeFilter Clone() {
      return new NodeFilter(this);
    }

    /// <summary>Field number for the "unknown_switch" field.</summary>
    public const int UnknownSwitchFieldNumber = 1;
    private bool unknownSwitch_;
    /// <summary>
    ///
    /// Filter unknown nodes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UnknownSwitch {
      get { return unknownSwitch_; }
      set {
        unknownSwitch_ = value;
      }
    }

    /// <summary>Field number for the "offline_switch" field.</summary>
    public const int OfflineSwitchFieldNumber = 2;
    private bool offlineSwitch_;
    /// <summary>
    ///
    /// Filter offline nodes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OfflineSwitch {
      get { return offlineSwitch_; }
      set {
        offlineSwitch_ = value;
      }
    }

    /// <summary>Field number for the "public_key_switch" field.</summary>
    public const int PublicKeySwitchFieldNumber = 3;
    private bool publicKeySwitch_;
    /// <summary>
    ///
    /// Filter nodes w/o public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PublicKeySwitch {
      get { return publicKeySwitch_; }
      set {
        publicKeySwitch_ = value;
      }
    }

    /// <summary>Field number for the "hops_away" field.</summary>
    public const int HopsAwayFieldNumber = 4;
    private int hopsAway_;
    /// <summary>
    ///
    /// Filter based on hops away
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HopsAway {
      get { return hopsAway_; }
      set {
        hopsAway_ = value;
      }
    }

    /// <summary>Field number for the "position_switch" field.</summary>
    public const int PositionSwitchFieldNumber = 5;
    private bool positionSwitch_;
    /// <summary>
    ///
    /// Filter nodes w/o position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PositionSwitch {
      get { return positionSwitch_; }
      set {
        positionSwitch_ = value;
      }
    }

    /// <summary>Field number for the "node_name" field.</summary>
    public const int NodeNameFieldNumber = 6;
    private string nodeName_ = "";
    /// <summary>
    ///
    /// Filter nodes by matching name string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeName {
      get { return nodeName_; }
      set {
        nodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 7;
    private int channel_;
    /// <summary>
    ///
    /// Filter based on channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnknownSwitch != other.UnknownSwitch) return false;
      if (OfflineSwitch != other.OfflineSwitch) return false;
      if (PublicKeySwitch != other.PublicKeySwitch) return false;
      if (HopsAway != other.HopsAway) return false;
      if (PositionSwitch != other.PositionSwitch) return false;
      if (NodeName != other.NodeName) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UnknownSwitch != false) hash ^= UnknownSwitch.GetHashCode();
      if (OfflineSwitch != false) hash ^= OfflineSwitch.GetHashCode();
      if (PublicKeySwitch != false) hash ^= PublicKeySwitch.GetHashCode();
      if (HopsAway != 0) hash ^= HopsAway.GetHashCode();
      if (PositionSwitch != false) hash ^= PositionSwitch.GetHashCode();
      if (NodeName.Length != 0) hash ^= NodeName.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnknownSwitch != false) {
        output.WriteRawTag(8);
        output.WriteBool(UnknownSwitch);
      }
      if (OfflineSwitch != false) {
        output.WriteRawTag(16);
        output.WriteBool(OfflineSwitch);
      }
      if (PublicKeySwitch != false) {
        output.WriteRawTag(24);
        output.WriteBool(PublicKeySwitch);
      }
      if (HopsAway != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HopsAway);
      }
      if (PositionSwitch != false) {
        output.WriteRawTag(40);
        output.WriteBool(PositionSwitch);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NodeName);
      }
      if (Channel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnknownSwitch != false) {
        output.WriteRawTag(8);
        output.WriteBool(UnknownSwitch);
      }
      if (OfflineSwitch != false) {
        output.WriteRawTag(16);
        output.WriteBool(OfflineSwitch);
      }
      if (PublicKeySwitch != false) {
        output.WriteRawTag(24);
        output.WriteBool(PublicKeySwitch);
      }
      if (HopsAway != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HopsAway);
      }
      if (PositionSwitch != false) {
        output.WriteRawTag(40);
        output.WriteBool(PositionSwitch);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NodeName);
      }
      if (Channel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UnknownSwitch != false) {
        size += 1 + 1;
      }
      if (OfflineSwitch != false) {
        size += 1 + 1;
      }
      if (PublicKeySwitch != false) {
        size += 1 + 1;
      }
      if (HopsAway != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HopsAway);
      }
      if (PositionSwitch != false) {
        size += 1 + 1;
      }
      if (NodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeName);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeFilter other) {
      if (other == null) {
        return;
      }
      if (other.UnknownSwitch != false) {
        UnknownSwitch = other.UnknownSwitch;
      }
      if (other.OfflineSwitch != false) {
        OfflineSwitch = other.OfflineSwitch;
      }
      if (other.PublicKeySwitch != false) {
        PublicKeySwitch = other.PublicKeySwitch;
      }
      if (other.HopsAway != 0) {
        HopsAway = other.HopsAway;
      }
      if (other.PositionSwitch != false) {
        PositionSwitch = other.PositionSwitch;
      }
      if (other.NodeName.Length != 0) {
        NodeName = other.NodeName;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnknownSwitch = input.ReadBool();
            break;
          }
          case 16: {
            OfflineSwitch = input.ReadBool();
            break;
          }
          case 24: {
            PublicKeySwitch = input.ReadBool();
            break;
          }
          case 32: {
            HopsAway = input.ReadInt32();
            break;
          }
          case 40: {
            PositionSwitch = input.ReadBool();
            break;
          }
          case 50: {
            NodeName = input.ReadString();
            break;
          }
          case 56: {
            Channel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UnknownSwitch = input.ReadBool();
            break;
          }
          case 16: {
            OfflineSwitch = input.ReadBool();
            break;
          }
          case 24: {
            PublicKeySwitch = input.ReadBool();
            break;
          }
          case 32: {
            HopsAway = input.ReadInt32();
            break;
          }
          case 40: {
            PositionSwitch = input.ReadBool();
            break;
          }
          case 50: {
            NodeName = input.ReadString();
            break;
          }
          case 56: {
            Channel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NodeHighlight : pb::IMessage<NodeHighlight>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeHighlight> _parser = new pb::MessageParser<NodeHighlight>(() => new NodeHighlight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeHighlight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.DeviceUiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeHighlight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeHighlight(NodeHighlight other) : this() {
      chatSwitch_ = other.chatSwitch_;
      positionSwitch_ = other.positionSwitch_;
      telemetrySwitch_ = other.telemetrySwitch_;
      iaqSwitch_ = other.iaqSwitch_;
      nodeName_ = other.nodeName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeHighlight Clone() {
      return new NodeHighlight(this);
    }

    /// <summary>Field number for the "chat_switch" field.</summary>
    public const int ChatSwitchFieldNumber = 1;
    private bool chatSwitch_;
    /// <summary>
    ///
    /// Hightlight nodes w/ active chat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChatSwitch {
      get { return chatSwitch_; }
      set {
        chatSwitch_ = value;
      }
    }

    /// <summary>Field number for the "position_switch" field.</summary>
    public const int PositionSwitchFieldNumber = 2;
    private bool positionSwitch_;
    /// <summary>
    ///
    /// Highlight nodes w/ position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PositionSwitch {
      get { return positionSwitch_; }
      set {
        positionSwitch_ = value;
      }
    }

    /// <summary>Field number for the "telemetry_switch" field.</summary>
    public const int TelemetrySwitchFieldNumber = 3;
    private bool telemetrySwitch_;
    /// <summary>
    ///
    /// Highlight nodes w/ telemetry data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TelemetrySwitch {
      get { return telemetrySwitch_; }
      set {
        telemetrySwitch_ = value;
      }
    }

    /// <summary>Field number for the "iaq_switch" field.</summary>
    public const int IaqSwitchFieldNumber = 4;
    private bool iaqSwitch_;
    /// <summary>
    ///
    /// Highlight nodes w/ iaq data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IaqSwitch {
      get { return iaqSwitch_; }
      set {
        iaqSwitch_ = value;
      }
    }

    /// <summary>Field number for the "node_name" field.</summary>
    public const int NodeNameFieldNumber = 5;
    private string nodeName_ = "";
    /// <summary>
    ///
    /// Highlight nodes by matching name string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeName {
      get { return nodeName_; }
      set {
        nodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeHighlight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeHighlight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChatSwitch != other.ChatSwitch) return false;
      if (PositionSwitch != other.PositionSwitch) return false;
      if (TelemetrySwitch != other.TelemetrySwitch) return false;
      if (IaqSwitch != other.IaqSwitch) return false;
      if (NodeName != other.NodeName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChatSwitch != false) hash ^= ChatSwitch.GetHashCode();
      if (PositionSwitch != false) hash ^= PositionSwitch.GetHashCode();
      if (TelemetrySwitch != false) hash ^= TelemetrySwitch.GetHashCode();
      if (IaqSwitch != false) hash ^= IaqSwitch.GetHashCode();
      if (NodeName.Length != 0) hash ^= NodeName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChatSwitch != false) {
        output.WriteRawTag(8);
        output.WriteBool(ChatSwitch);
      }
      if (PositionSwitch != false) {
        output.WriteRawTag(16);
        output.WriteBool(PositionSwitch);
      }
      if (TelemetrySwitch != false) {
        output.WriteRawTag(24);
        output.WriteBool(TelemetrySwitch);
      }
      if (IaqSwitch != false) {
        output.WriteRawTag(32);
        output.WriteBool(IaqSwitch);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChatSwitch != false) {
        output.WriteRawTag(8);
        output.WriteBool(ChatSwitch);
      }
      if (PositionSwitch != false) {
        output.WriteRawTag(16);
        output.WriteBool(PositionSwitch);
      }
      if (TelemetrySwitch != false) {
        output.WriteRawTag(24);
        output.WriteBool(TelemetrySwitch);
      }
      if (IaqSwitch != false) {
        output.WriteRawTag(32);
        output.WriteBool(IaqSwitch);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChatSwitch != false) {
        size += 1 + 1;
      }
      if (PositionSwitch != false) {
        size += 1 + 1;
      }
      if (TelemetrySwitch != false) {
        size += 1 + 1;
      }
      if (IaqSwitch != false) {
        size += 1 + 1;
      }
      if (NodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeHighlight other) {
      if (other == null) {
        return;
      }
      if (other.ChatSwitch != false) {
        ChatSwitch = other.ChatSwitch;
      }
      if (other.PositionSwitch != false) {
        PositionSwitch = other.PositionSwitch;
      }
      if (other.TelemetrySwitch != false) {
        TelemetrySwitch = other.TelemetrySwitch;
      }
      if (other.IaqSwitch != false) {
        IaqSwitch = other.IaqSwitch;
      }
      if (other.NodeName.Length != 0) {
        NodeName = other.NodeName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChatSwitch = input.ReadBool();
            break;
          }
          case 16: {
            PositionSwitch = input.ReadBool();
            break;
          }
          case 24: {
            TelemetrySwitch = input.ReadBool();
            break;
          }
          case 32: {
            IaqSwitch = input.ReadBool();
            break;
          }
          case 42: {
            NodeName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChatSwitch = input.ReadBool();
            break;
          }
          case 16: {
            PositionSwitch = input.ReadBool();
            break;
          }
          case 24: {
            TelemetrySwitch = input.ReadBool();
            break;
          }
          case 32: {
            IaqSwitch = input.ReadBool();
            break;
          }
          case 42: {
            NodeName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GeoPoint : pb::IMessage<GeoPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeoPoint> _parser = new pb::MessageParser<GeoPoint>(() => new GeoPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GeoPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.DeviceUiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeoPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeoPoint(GeoPoint other) : this() {
      zoom_ = other.zoom_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeoPoint Clone() {
      return new GeoPoint(this);
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 1;
    private int zoom_;
    /// <summary>
    ///
    /// Zoom level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Zoom {
      get { return zoom_; }
      set {
        zoom_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private int latitude_;
    /// <summary>
    ///
    /// Coordinate: latitude
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 3;
    private int longitude_;
    /// <summary>
    ///
    /// Coordinate: longitude
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GeoPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GeoPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Zoom != other.Zoom) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Zoom != 0) hash ^= Zoom.GetHashCode();
      if (Latitude != 0) hash ^= Latitude.GetHashCode();
      if (Longitude != 0) hash ^= Longitude.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Zoom != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Zoom);
      }
      if (Latitude != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Latitude);
      }
      if (Longitude != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Zoom != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Zoom);
      }
      if (Latitude != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Latitude);
      }
      if (Longitude != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Zoom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zoom);
      }
      if (Latitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Latitude);
      }
      if (Longitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Longitude);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GeoPoint other) {
      if (other == null) {
        return;
      }
      if (other.Zoom != 0) {
        Zoom = other.Zoom;
      }
      if (other.Latitude != 0) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0) {
        Longitude = other.Longitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Zoom = input.ReadInt32();
            break;
          }
          case 16: {
            Latitude = input.ReadInt32();
            break;
          }
          case 24: {
            Longitude = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Zoom = input.ReadInt32();
            break;
          }
          case 16: {
            Latitude = input.ReadInt32();
            break;
          }
          case 24: {
            Longitude = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Map : pb::IMessage<Map>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Meshtastic.Protobufs.DeviceUiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map(Map other) : this() {
      home_ = other.home_ != null ? other.home_.Clone() : null;
      style_ = other.style_;
      followGps_ = other.followGps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "home" field.</summary>
    public const int HomeFieldNumber = 1;
    private global::Meshtastic.Protobufs.GeoPoint home_;
    /// <summary>
    ///
    /// Home coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Meshtastic.Protobufs.GeoPoint Home {
      get { return home_; }
      set {
        home_ = value;
      }
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 2;
    private string style_ = "";
    /// <summary>
    ///
    /// Map tile style
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Style {
      get { return style_; }
      set {
        style_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "follow_gps" field.</summary>
    public const int FollowGpsFieldNumber = 3;
    private bool followGps_;
    /// <summary>
    ///
    /// Map scroll follows GPS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FollowGps {
      get { return followGps_; }
      set {
        followGps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Home, other.Home)) return false;
      if (Style != other.Style) return false;
      if (FollowGps != other.FollowGps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (home_ != null) hash ^= Home.GetHashCode();
      if (Style.Length != 0) hash ^= Style.GetHashCode();
      if (FollowGps != false) hash ^= FollowGps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (home_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Home);
      }
      if (Style.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Style);
      }
      if (FollowGps != false) {
        output.WriteRawTag(24);
        output.WriteBool(FollowGps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (home_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Home);
      }
      if (Style.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Style);
      }
      if (FollowGps != false) {
        output.WriteRawTag(24);
        output.WriteBool(FollowGps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (home_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
      }
      if (Style.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Style);
      }
      if (FollowGps != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      if (other.home_ != null) {
        if (home_ == null) {
          Home = new global::Meshtastic.Protobufs.GeoPoint();
        }
        Home.MergeFrom(other.Home);
      }
      if (other.Style.Length != 0) {
        Style = other.Style;
      }
      if (other.FollowGps != false) {
        FollowGps = other.FollowGps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (home_ == null) {
              Home = new global::Meshtastic.Protobufs.GeoPoint();
            }
            input.ReadMessage(Home);
            break;
          }
          case 18: {
            Style = input.ReadString();
            break;
          }
          case 24: {
            FollowGps = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (home_ == null) {
              Home = new global::Meshtastic.Protobufs.GeoPoint();
            }
            input.ReadMessage(Home);
            break;
          }
          case 18: {
            Style = input.ReadString();
            break;
          }
          case 24: {
            FollowGps = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
